name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      directory:
        type: choice
        required: true
        description: Directory with TF code
        options: 
        - terraform/prod/github

# env:
#   GITHUB_TOKEN: ${{ secrets.TF_VAR_datadog_api_key }}
#   GITHUB_OWNER: danielinclouds-project-sample

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        id:   terraform-setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      # - name: Authenticate to Google Cloud
      #   id:   auth
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     token_format: access_token
      #     credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Init
        id:   terraform-init
        run: |
          cd ${{ github.event.inputs.directory }}
          terraform init

      - name: Terraform Plan
        id:   terraform-plan
        run: |
          cd ${{ github.event.inputs.directory }}
          terraform plan -input=false -lock-timeout=120s


  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: 
      - terraform-plan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        id:   terraform-setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      # - name: Authenticate to Google Cloud
      #   id:   auth
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     token_format: access_token
      #     credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Init
        id:   terraform-init
        run: |
          cd ${{ github.event.inputs.directory }}
          terraform init

      - name: Terraform Apply
        id:   terraform-apply
        run: |
          cd ${{ github.event.inputs.directory }}
          terraform apply -input=false -lock-timeout=120s -auto-approve